// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º
// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ "Jazz" —Ç–∞ "Blues".
// –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// –í–∏–≤–µ–¥—ñ—Ç—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É –≤ –∫–æ–Ω—Å–æ–ª—å. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.


//   /** C—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ */
//   let genres = ['Jazz', 'Blues'];

//   /** –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –≤ –∫—ñ–Ω–µ—Ü—å –º–∞—Å–∏–≤—É */
//   genres.push('–†–æ–∫-–Ω-—Ä–æ–ª');

//   /** –≤–∏–≤–æ–¥–∏–º–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç */
//   console.log("–ø–µ—Ä—à–∏–π",genres[0])

//   /**
//    * 1. –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤–∞
//    * 2. –í–∏–≤–æ–¥–∏–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –ø–æ —ñ–Ω–¥–µ–∫—Å—É
//   */
//   const lastIndex = genres.length - 1;
//   console.log("last", genres[lastIndex]);

//   /** –í–∏–¥–∞–ª—è—î–º–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞ */
//   const firstElement = genres.shift();

//   /** –í–∏–≤–æ–¥–∏–º–æ –≤–∏–¥–∞–ª–µ–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç */
//   console.log(firstElement);

//   /** –í—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É –¥–≤–∞ –µ–ª–µ–º–µ–Ω—Ç–∏ */
//   genres.unshift('Country','Reggae');
//   console.log(genres);






// Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
// –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.

// const values = '8 11';

// /** —Ä–æ–∑–¥—ñ–ª—è—î–º–æ —Ä—è–¥–æ–∫ –ø–æ –ø—Ä–æ–±—ñ–ª—É. –°—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –º–∞—Å—Å–∏–≤ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ['8','11']  */
//  const sides = values.split(' ');
//  console.log(sides);

// /** –ü–µ—Ä–µ–º–Ω–æ–∂–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –º–∞—Å–∏–≤–∞ –ø–æ —ñ–Ω–¥–µ–∫—Å—É */
//  const square = sides[0] * sides[1];
//  console.log(square)





//  * Task 3
//   * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ
//   * –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
//   * 1: —è–±–ª—É–∫–æ
//   * 2: –≤–∏–Ω–æ–≥—Ä–∞–¥
//   *
//   * –î–ª—è —Ü—å–æ–≥–æ –≤ —Ç—ñ–ª—ñ —Ü–∏–∫–ª—É –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–æ —ñ–Ω–¥–µ–∫—Å–∞ 'i' –¥–æ–¥–∞—î–º–æ 1
//   */

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let i = 0; i < fruits.length; i += 1) {
//   console.log(`${i + 1}: ${fruits[i]}`)
// }






// Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
// –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
// —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏.–ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å.
// –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.

// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';

// // –ó—Ä–æ–±–∏—Ç–∏ –º–∞—Å–∏–≤
// const newNames = names.split(',');
// console.log(newNames);

// const newPhones = phones.split(',');
// console.log(newPhones);

// //
// for (let i = 0; i < newNames.length; i += 1) {
//     console.log(`${newNames[i]} - ${newPhones[i]}`);
    
// }







// Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –æ–∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.
// –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É.
// –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å - —è–∫–æ–≥–æ —Ä—è–¥–∫–∞.

// const string = 'Welcome to the future';

// // –†–æ–±–∏–º–æ –º–∞—Å–∏–≤
// const newString = string.split(' ');
// console.log(newString);

// // –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É

// const deletedFirstElement = newString.shift();
// console.log(deletedFirstElement);

// console.log(newString);

// // –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
// const deletedLastElement = newString.pop();
// console.log(deletedLastElement);
// console.log(newString);

// –í–∞—Ä—ñ–∞–Ω—Ç –ª–µ–∫—Ç–æ—Ä–∞
//  * Task 5.
//  * –í–∏–≤–µ—Å—Ç–∏ –≤—Å—ñ —Å–ª–æ–≤–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.
//  * –ú–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å —è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
//  * 1. –†–æ–∑–±–∏–≤–∞—î–º–æ —Ä—è–¥–æ–∫ –Ω–∞ –º–∞—Å–∏–≤ –ø–æ –ø—Ä–æ–±—ñ–ª—É(–∫–æ–∂–Ω–µ —Å–ª–æ–≤–æ - –æ–∫—Ä–µ–º–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞)
//  * 2. –ú–µ—Ç–æ–¥–æ–º splice - –∑–º—ñ–Ω—é—î–º–æ –º–∞—Å–∏–≤ –≤–∏–¥–∞–ª—è—é—á–∏ –∑ –Ω—å–æ–≥–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ —Å–æ—Ç–∞–Ω–Ω—å–æ–≥–æ
//  *    splice(—ñ–Ω–¥–µ–∫—Å –∑ —è–∫–æ–≥–æ –ø–æ—á–∏–Ω–∞—Ç–∏, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤)
//  * 3. slice –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∑ –≤–∏–¥–∞–ª–µ–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
//  * 4. –ó–±–∏—Ä–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–∏–π –º–∞—Å–∏–≤ –≤ —Ä—è–¥–æ–∫
//  *
//  * Note: –î–ª—è –º–µ—Ç–æ–¥–∞ slice –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º(–ø–æ—á–∞—Ç–∫–æ–º) –±—É–¥–µ –µ–ª–µ–º–µ–Ω—Ç –∑ —ñ–Ω–¥–µ–∫—Å–æ–º 1(–¥—Ä—É–≥–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞).
//  * –ê–ª–µ —è–∫ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:
//  *  –í—Å—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –º–∞—Å–∏–≤—ñ "words.length". –Ø–∫—â–æ –± —Ç—Ä–µ–±–∞ –±—É–ª–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å–µ, —Ç–æ –ø—ñ–¥—ñ–π—à–ª–æ –±.
//  *  –ê–ª–µ –ø–µ—Ä—à–∏–π –º–∏ –≤–∂–µ –≤—ñ–¥–∫–∏–¥—É—î–º–æ, —Ç–æ–º—É –±–µ—Ä–µ–º "words.length - 1".
//  *  –¢–µ–ø–µ—Ä, –∑ —É–º–æ–≤–æ—é –∑–∞–¥–∞—á—ñ, —Ç—Ä–µ–±–∞ –≤—ñ–¥–∫–∏–Ω—É—Ç–∏ —ñ –æ—Å—Ç–∞–Ω–Ω—ñ–π. –¢–æ–±—Ç–æ –≤—ñ–¥–Ω—è—Ç–∏ —â–µ –æ–¥–∏–Ω–∏—Ü—é.
//  *  –¢–æ–º—É –≤–∏–π–¥–µ "words.length - 2"
//  */

//  const string = 'Welcome to the future. Hello my name is Stepan';
//  const words = string.split(' ');
//  console.log(words)

//  const amountToDelete = words.length - 2;
//  const deletedWords = words.splice(1, amountToDelete );
//  console.log(deletedWords)

//  let newString = deletedWords.join(' ');
//  console.log(newString)






// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å —ó—ó –≤ –∫–æ–Ω—Å–æ–ª—å.

// * 1. –†–æ–∑–±–∏–≤–∞—î–º–æ —Ä—è–¥–æ–∫ –Ω–∞ –º–∞—Å–∏–≤ –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ(–∫–æ–∂–µ–Ω —Å–∏–º–≤–æ–ª —Ä—è–¥–∫–∞ - –æ–∫—Ä–µ–º–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞)
//  * 2. –ú–µ—Ç–æ–¥–æ–º reverse, —Ä–æ–∑–≤–µ—Ä—Ç–∞—î–º–æ –º–∞—Å–∏–≤ —Å–∑–∞–¥—É –Ω–∞–ø–µ—Ä–µ–¥([a,b,c] -> [c,b,a])
//  * 3. –ó–±–∏—Ä–∞—î–º–æ –≤–∂–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∏–π –º–∞—Å–∏–≤ –≤ –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫
//  */

 const string = 'Welcome to the future';

//  const array = string.split('');
//  console.log(array);

//  array.reverse();
//  console.log(array);

//  const newString = array.join('');
//  console.log(string, '|',newString)
 
/** –í–∞—Ä—ñ–∞–Ω—Ç 2
 * –ø—Ä–æ—Ö–æ–¥–∏–º–æ —Ü–∏–∫–ª–æ–º –∑ –∫—ñ–Ω—Ü—è –º–∞—Å–∏–≤–æ –¥–æ –ø–æ—á–∞—Ç–∫—É.
 * –ü–æ—Å–∏–º–≤–æ–ª—å–Ω–æ –∑–∞–ø–∏—Å—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ —Ä—è–¥–æ–∫
 */
// let newStr = '';
//  for (let i = string.length - 1; i >= 0; i -= 1) {
//   console.log(i, string[i], newStr)
//   newStr += string[i];
//  }

//  console.log(newStr)






// Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É.

// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// console.log(langs);

// langs.sort()
//   console.log(langs)






// Example 8 - –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. 
// –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å - —è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª.–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.

// const numbers = [2, 17, 94, 1, 23, 37];
// let min = numbers[0];

// for (const number of numbers) {
//     console.log(number);
//     if (number < min) {
//         min = number;
//     }
// }
//     console.log(min);